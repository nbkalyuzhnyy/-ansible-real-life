- name: Notification
  block:

    - name: Start task status - Dummy
      ansible.builtin.set_fact:
        random_number: "{{ [3,4,5,6] | random }}"
        status_data: "{{ status_data | combine({status_data_item: {'name': status_data[status_data_item].name, 'status': 'In Progress'}}, recursive=True) }}"

    - name: Generate report
      include_tasks:
        file: generate_report.yaml

    - name: Render and post message to Slack
      ansible.builtin.include_role:
        name: notify-slack
      vars:
        slack_template: 'slack_status.json'
        channel: "{{ slack_channel }}"
      when: send_slack | default(true)

    - name: Update task status - Dummy
      ansible.builtin.set_fact:
        random_number: "{{ [3,4,5,6] | random }}"
        status_data: "{{ status_data | combine({status_data_item: {'name': status_data[status_data_item].name, 'status': 'Completed'}}, recursive=True) }}"

    - name: wait for the task to complete - Dummy
      ansible.builtin.shell: "sleep {{ random_number }}"
      delegate_to: localhost
      when: demo_waiting | default(false)

    - name: Generate report file - {{ report_file_name }}
      ansible.builtin.template:
        src: patching-dashboard.html
        dest: "{{ report_file_name }}"
        owner: root
        group: wheel
        mode: '0644'
      become: true
      delegate_to: "{{ report_server }}"

    - name: Render and post message to Slack
      ansible.builtin.include_role:
        name: notify-slack
      vars:
        slack_template: 'slack_status.json'
        channel: "{{ slack_channel }}"
      when: send_slack | default(false)

  rescue:
    - name: Notify in log
      ansible.builtin.debug:
        msg: "Error: Unable to generate report or notify the slack channel! Please check your configuration or connectivity."

  always:

    - name: Gather status if failed
      ansible.builtin.set_fact:
        status_data: "{{ status_data | combine({status_data_item: {'name': status_data[status_data_item].name, 'status': 'Error', 'message': 'Something went wrong', 'url': controller_api_url ~ awx_job_id }}, recursive=True) }}"
      when: status_data[status_data_item].failed | default(false)

  # always:
  #   - name: Fail job based on status
  #     ansible.builtin.fail:
  #       msg: Failed Task
  #     when: status_data[status_data_item].failed | default(false)
